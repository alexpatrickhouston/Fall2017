  stdafx.cpp
  PDA.cpp
c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\tuple(1115): error C2512: 'PDA::Action::Action': no appropriate default constructor available
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\tuple(1130): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::tuple<const char &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<::size_t>)' being compiled
          with
          [
              _Kty=char,
              _Ty=PDA::Action,
              _Tuple1=std::tuple<const char &>,
              _Tuple2=std::tuple<>
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\tuple(1127): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::tuple<const char &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<::size_t>)' being compiled
          with
          [
              _Kty=char,
              _Ty=PDA::Action,
              _Tuple1=std::tuple<const char &>,
              _Tuple2=std::tuple<>
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0(856): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const char&,>(std::piecewise_construct_t,std::tuple<const char &>,std::tuple<>)' being compiled
          with
          [
              _Kty=char,
              _Ty=PDA::Action
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xmemory0(856): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const char&,>(std::piecewise_construct_t,std::tuple<const char &>,std::tuple<>)' being compiled
          with
          [
              _Kty=char,
              _Ty=PDA::Action
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xtree(773): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const char &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const char &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const char,PDA::Action>,std::_Default_allocator_traits<std::allocator<std::pair<const char,PDA::Action>>>::void_pointer>>,
              _Ty=std::pair<const char,PDA::Action>,
              _Objty=std::pair<const char,PDA::Action>
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xtree(772): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const char &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const char &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const char,PDA::Action>,std::_Default_allocator_traits<std::allocator<std::pair<const char,PDA::Action>>>::void_pointer>>,
              _Ty=std::pair<const char,PDA::Action>,
              _Objty=std::pair<const char,PDA::Action>
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xtree(968): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<const char &>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<const char &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const char,PDA::Action>,
              _Alloc=std::allocator<std::pair<const char,PDA::Action>>,
              _Traits=std::_Tmap_traits<char,PDA::Action,std::less<char>,std::allocator<std::pair<const char,PDA::Action>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\xtree(968): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<const char &>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<const char &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const char,PDA::Action>,
              _Alloc=std::allocator<std::pair<const char,PDA::Action>>,
              _Traits=std::_Tmap_traits<char,PDA::Action,std::less<char>,std::allocator<std::pair<const char,PDA::Action>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\map(220): note: see reference to function template instantiation 'std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,PDA::Action,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<const char &>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<const char &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const char,PDA::Action>,
              _Kty=char,
              _Pr=std::less<char>,
              _Alloc=std::allocator<std::pair<const char,PDA::Action>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\map(220): note: see reference to function template instantiation 'std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,PDA::Action,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<const char &>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<const char &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const char,PDA::Action>,
              _Kty=char,
              _Pr=std::less<char>,
              _Alloc=std::allocator<std::pair<const char,PDA::Action>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\map(236): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<char,PDA::Action,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<const char&,>(_Keyty)' being compiled
          with
          [
              _Ty=std::pair<const char,PDA::Action>,
              _Kty=char,
              _Keyty=const char &
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\map(236): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<char,PDA::Action,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<const char&,>(_Keyty)' being compiled
          with
          [
              _Ty=std::pair<const char,PDA::Action>,
              _Kty=char,
              _Keyty=const char &
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\map(351): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<char,PDA::Action,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(const char &)' being compiled
          with
          [
              _Ty=std::pair<const char,PDA::Action>,
              _Kty=char
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\map(351): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<char,PDA::Action,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(const char &)' being compiled
          with
          [
              _Ty=std::pair<const char,PDA::Action>,
              _Kty=char
          ]
  c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.11.25503\include\map(350): note: while compiling class template member function 'PDA::Action &std::map<char,PDA::Action,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](const char &)'
          with
          [
              _Kty=char,
              _Ty=PDA::Action
          ]
  c:\users\alex patrick houston\desktop\cst229_assign3_alex_houston\cst229_assign3_alex_houston\pda.cpp(39): note: see reference to function template instantiation 'PDA::Action &std::map<char,PDA::Action,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](const char &)' being compiled
          with
          [
              _Kty=char,
              _Ty=PDA::Action
          ]
  c:\users\alex patrick houston\desktop\cst229_assign3_alex_houston\cst229_assign3_alex_houston\pda.h(22): note: see reference to class template instantiation 'std::map<char,PDA::Action,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' being compiled
          with
          [
              _Kty=char,
              _Ty=PDA::Action
          ]
  CST229Assign3AlexHouston.cpp
c:\users\alex patrick houston\desktop\cst229_assign3_alex_houston\cst229_assign3_alex_houston\cst229assign3alexhouston.cpp(34): error C3861: 'SplitString': identifier not found
c:\users\alex patrick houston\desktop\cst229_assign3_alex_houston\cst229_assign3_alex_houston\cst229assign3alexhouston.cpp(67): error C2440: 'return': cannot convert from 'std::list<std::string,std::allocator<_Ty>>' to 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  c:\users\alex patrick houston\desktop\cst229_assign3_alex_houston\cst229_assign3_alex_houston\cst229assign3alexhouston.cpp(67): note: No constructor could take the source type, or constructor overload resolution was ambiguous
  Generating Code...
